• 磁盘与分区表示
hd,表示IDE设备 IDe是数据传输方式，即并行,现在全被串口代替，即ATA硬盘，串口的用SATA来
sd,表示SCSI设备 即小型计算机系统接口。SCSI设备：硬盘、光驱、软驱、打印机、扫描仪等。
/dev/sda5:表示SCSI设备,第一块磁盘，第5个分区

#####################################################
• 列出内核版本
[root@svr7 桌面]# uname -r
• 列出CPU处理器信息
[root@svr7 桌面]# lscpu
• 检查内存大小、空闲情况
[root@room9pc01 ~]# cat /proc/meminfo 
#####################################################
• 文本内容操作
• less分屏阅读工具
• 格式:less [选项] 文件名...
######################################################
• head、tail 命令
– 格式:head -n 数字 文件名
      tail -n 数字 文件名

##################################################
• 什么是命令?
  – 用来实现某一类功能的指令或程序
  – 命令的执行依赖于解释器( 默认解释器：/bin/bash )
###################################################
• Linux命令的分类
– 内部命令:属于解释器的一部分
– 外部命令:解释器之外的其他程序
###################################################
• 查看光驱设备
[root@A /]# ls /dev/cdrom 
/dev/cdrom
[root@A /]# ls -l /dev/cdrom
###################################################
• 定义新的别名
– alias  别名名称= '实际执行的命令行'
• 取消已设置的别名
– unalias  [别名名称]
###################################################
– 格式:mkdir [-p] [/路径/]目录名...
     #-p表示连父目录

[root@A ~]# mkdir -p  /vod/movie/cartoon
[root@A ~]# ls  /vod

[root@A ~]# mkdir -p  /opt/aa/bb/cc/dd
[root@A ~]# ls  /opt/

[root@A ~]# mkdir  /root/nsd01  /opt/nsd02
[root@A ~]# ls  /root
[root@A ~]# ls  /opt
##################################################
cp 复制
• cp — Copy
– 格式:cp [选项]... 原文件...   目标路径
– -r:递归,复制目录时必须有此选项

###################################################
vim模式：命令模式    输入模式(插入模式  编辑模式)    末行模式
#######################################################
零散的软件管理
• RPM Package Manager,RPM包管理器
– rpm -q 软件名...
– rpm -ivh 软件名-版本信息.rpm...
– rpm -e 软件名...
补充：导入红帽签名信息
# rpm --import /dvd/RPM-GPG-KEY-redhat-release
########################################################
[root@server0 ~]# vim  /etc/yum.repos.d/rhel7.repo
  [rhel7]           #仓库标识，仓库的名字
  name=rhel7.0      #仓库的描述信息
  baseurl=http://classroom.example.com/content/rhel7.0/ 
  x86_64/dvd/       #指定服务端位置，最好浏览器进行复制粘贴
 enabled=1         #启用该文件  
 gpgcheck=0        #不检测红帽的签名信息
[root@server0 ~]# yum  repolist    #显示仓库信息
######################################################
wget 软件包的URL网址   -O  /目录路径/新文件  

  -O 另存为，必须要写文件名
#####################################################
[root@A ~]# route       #查看网关地址的命令

########################################################
[root@server0 ~]# rm -rf /etc/yum.repos.d/*
[root@server0 ~]# vim  /etc/yum.repos.d/rhel7.repo
  [rhel7]           #仓库标识，仓库的名字
  name=rhel7.0      #仓库的描述信息
  baseurl=http://classroom.example.com/content/rhel7.0/ 
  x86_64/dvd/       #指定服务端位置，最好浏览器进行复制粘贴
  enabled=1         #启用该文件
  gpgcheck=0        #不检测红帽的签名信息
[root@server0 ~]# yum  repolist    #显示仓库信息
[root@server0 ~]# yum clean all
搜寻关键字
[root@server0 ~]# yum search  ftp
#####################################################

– wget 软件包的URL网址

[root@server0 /]# uname  -r

# rpm -ivh kernel-3.10.0-123.1.2.el7.x86_64.rpm  #安装新内核

[root@server0 /]# uname  -r
[root@server0 /]# reboot       #重起虚拟机
[root@room9pc01 ~]# gos
[root@server0 ~]# uname  -r     #查看内核版本
3.10.0-123.1.2.el7.x86_64  
[root@server0 ~]# 

######################################################
wget 软件包的URL网址   -O  /目录路径/新文件  

  -O 另存为，必须要写文件名

#####################################################
一、设置永久的DNS服务器，域名解析 ： 将域名解析为IP地址
       指定DNS服务器配置文件
[root@server0 ~]# vim  /etc/resolv.conf 
 nameserver 172.25.254.254
[root@server0 ~]# nslookup  域名
######################################################
管理用户和组
用户帐号：1.能够登陆操作系统  2.不同的用户不同的身份，可以进行很好控制
组 ： 方便管理用户 ，权限分配方面。
       将想要具备相同权限的用户，加入一个组，最后给组设置权限
   组的分类：基本组        附加组（从属组）
   一个用户必须至少属于一个组
  UID:唯一标识一个用户，编号
  GID:唯一标识一个组，编号
   管理员root的UID：永远为0
  RHEL7普通用户的UID：默认从1000起始
    系统程序用户UID范围：1-999
###################################################
添加用户
所有用户的基本信息存放在 /etc/passwd 文件
每一个用户占用，一行信息
 [root@A ~]# head -1 /etc/passwd
 root:x:0:0:root:/root:/bin/bash
 用户名:密码占位符:UID:基本组的GID:用户的描述信息:用户的家目录:解释器

• 使用 useradd 命令
– useradd [选项]... 用户名

• 常用命令选项
 -u 用户id、-d 家目录路径、-G 附加组、-s 登录Shell(登陆解释器程序)
 /sbin/nologin:禁止用户登录系统
#####################################################
非交互式设置密码
[root@A ~]# echo 123456 | passwd --stdin nsd01
###################################################
用户密码信息存放在 /etc/shadow 文件
####################################################
修改用户属性
• 使用 usermod 命令
– usermod [选项]... 用户名

• 常用命令选项
– -u 用户id、-d 家目录路径、-s 登录Shell
– -G 附加组
可以通过vim修改/etc/passwd文件内容，达到修改用户属性
#######################################################
删除用户
• 使用 userdel      命令
– userdel  [-r]   用户名      #连同家目录一并删除
######################################################
管理组账号
添加组
组基本信息存放在 /etc/group 文件
[root@A ~]# grep stugrp /etc/group
 stugrp:x:1702:
 组名：组的密码占位符：组的GID标识：组的成员列表
• 使用 groupadd 命令
– groupadd [-g 组ID] 组名
[root@A ~]# groupadd  stugrp
####################################################
• 使用 gpasswd 命令
– gpasswd -a 用户名 组名
– gpasswd -d 用户名 组名
[root@A ~]# gpasswd -a harry stugrp     #将用户加入组
[root@A ~]# gpasswd -d natasha stugrp   #将用户从组中删
删除组
• 使用 groupdel 命令
– groupdel 组名
#####################################################
tar备份与恢复(归档及压缩)
制作tar包:
       tar  选项       /路径/归档及压缩包的名字      /路径/源文档 .......
释放tar包:
	tar  选项    /路径/归档及压缩包的名字   -C  /路径/
– -C（大写）:指定释放的位置

– -c:创建归档
– -x:释放归档
– -f:指定归档文件名称,必须放在所有选项的最后
– -z、-j、-J:调用 .gz、.bz2、.xz 格式的工具进行处理

– -t:显示归档中的文件清单
######################################################
时间同步
– NTP服务器为客户机提供标准时间
– NTP客户机需要与NTP服务器保持沟通
  2.指定NTP服务器，修改配置文件/etc/chrony.conf

3.重起刷新
   [root@A ~]# systemctl restart chronyd
   [root@A ~]# systemctl enable chronyd    #设置开机自启动

   daemon:超级守护程序；守护神;（希腊神话中）半人半神的精灵
#####################################################
基本权限的类别
• 访问方式(权限)
– 读取:允许查看内容-read   r
– 写入:允许修改内容-write  w
– 可执行:允许运行和切换-execute   x
• 权限适用对象(归属)
  – 所有者:拥有此文件/目录的用户-user   u
  – 所属组:拥有此文件/目录的组-group     g
  – 其他用户:除所有者、所属组以外的用户-other   o
###################################################
设置基本权限
• 使用 chmod 命令
– chmod [-R] 归属关系+-=权限类别   文档...
      [-R]:递归设置
[root@server0 /]# chmod u=rwx,g=rx,o=--- /nsd01
###################################################
 Permission denied : 权限不足
 command not found： 命令没有找到
########################################################
设置文档归属
• 使用 chown 命令
– chown [-R] 属主 文档...
– chown [-R] :属组 文档...
– chown [-R] 属主:属组 文档...
[root@server0 /]# chown lisi:tarena /nsd03
######################################################
 附加权限(特殊权限)
Set GID
• 附加在属组的 x 位上
– 属组的权限标识会变为 s
– 适用于目录,Set GID可以使目录下新增的文档自动设
置与父目录相同的属组
– 让新增的子文档，自动继承父目录的所属组
[root@server0 /]# chmod g+s /nsd06      #赋予Set GID权限
####################################################
acl策略的作用
• 文档归属的局限性
– 任何人只属于三种角色:属主、属组、其他人
– 无法实现更精细的控制
• acl访问策略
– 能够对个别用户、个别组设置独立的权限
– 大多数挂载的EXT3/4、XFS文件系统默认已支持
设置acl访问控制策略
• 使用 getfacl、setfacl 命令
– getfacl 文档...
– setfacl [-R] -m u:用户名:权限类别 文档...
– setfacl [-R] -m g:组名:权限类别 文档...
– setfacl [-R] -x u:用户名   文档..     #清除指定的ACL策略
– setfacl [-R] -b 文档...       #清空所有ACL策略

[root@server0 /]# setfacl -m u:lisi:rx /nsd07    #设置ACL
[root@server0 /]# getfacl /nsd07              #查看ACL权限
[root@server0 /]# setfacl -x u:lisi  /nsd09  #删除指定ACL
[root@server0 /]# setfacl -b  /nsd09         #删除所有ACL
####################################################
使用LDAP认证

     实现网络用户：用户集中管理，用户由LDAP服务器创建
           本地用户：本地机器创建，只能用于本地登陆

– 网络用户:用户名、密码信息存储在 LDAP 服务端
    1.安装软件包sssd,专用于与LDAP服务端沟通的软件
  [root@server0 /]# yum  -y  install  sssd
2.图形的工具authconfig-gtk ,设置sssd，指定LDAP服务端位置
[root@server0 /]# yum  -y  install  authconfig-gtk
  [root@server0 ~]# authconfig-gtk
    选择LDAP
     dc=example,dc=com             #指定服务端域名
     classroom.example.com         #指定服务端主机名
勾选TLS加密
使用证书加密: 
    http://classroom.example.com/pub/example-ca.crt
选择LDAP密码
3.重起sssd
  [root@server0 ~]# systemctl restart sssd
  [root@server0 ~]# systemctl enable sssd
     
    4.验证：
[root@server0 ~]# grep ldapuser0 /etc/passwd   #非本地用户
#####################################################
家目录漫游
什么是NFS共享
• Network File System,网络文件系统
– 由NFS服务器将指定的文件夹共享给客户机
– 客户机将此共享目录 mount 到本地目录,访问此共享
资源就像访问本地目录一样方便
– 类似于 EXT4、XFS等类型,只不过资源在网上N
    1.查看服务端有哪些共享？
  [root@server0 ~]# showmount  -e  classroom.example.com
    2.访问共享
# mount classroom.example.com:/home/guests/   /home/guests/
#####################################################
周期性计划任务
cron任务概述
• 用途:按照设置的时间间隔为用户反复执行某一项固
定的系统任务
• 软件包:cronie、crontabs
• 系统服务:crond
• 日志文件:/var/log/crond
crontab任务记录
– 分   时   日   月    周    任务命令行(绝对路径)
    *     *   *    *     *
 	*:匹配范围内任意时间
	,:分隔多个不连续的时间点
	-:指定连续时间范围
	/n:指定时间频率,每n ...
• 使用 crontab 命令
– 编辑:crontab -e [-u 用户名]
– 查看:crontab -l [-u 用户名]
– 清除:crontab -r [-u 用户名]
[root@server0 ~]# crontab -e -u root   #书写计划任务
 * * * * *  date >> /opt/time.txt
#######################################################
Sticky Bit
• 附加在其他人的 x 位上
– 其他人的权限标识会变为 t
– 适用于开放 w 权限的目录,可以阻止用户滥用 w 写入权限(禁止操作别人的文档)
[root@server0 ~]# chmod o+t /public/
#####################################################
查找文本内容
• 根据字符串模式提取文本行
– grep [选项] '匹配模式' 文本文件...
– 命令行 | grep [选项] '匹配模式'
• 常用命令选项
– -v,取反匹配
– -i,忽略大小写
[root@server0 /]# grep  -i  ROOT /etc/passwd
[root@server0 /]# grep  -v  root /etc/passwd

#####################################################
• 常用的匹配模式
– word  包含字符串word
– ^word 以字符串word开头
– word$ 以字符串word结尾
–  ^$       匹配空行
  显示文件有效配置信息（去除空行，去除注释）
# grep -v ^# /etc/login.defs   |  grep -v ^$   > /opt/1.txt
###################################################
查找文件
• 根据预设的条件递归查找对应的文件路径
– find  [目录]  [条件1] [-a|-o] [条件2] ...
	-type 类型(f 文本文件、d 目录、l 快捷方式)
	-name "文档名称"
	-size +|-文件大小(k、M、G)
	-user 用户名
使用find命令的 -exec 操作
– find .. .. -exec 处理命令 {} \;
– 优势:以 {} 代替每一个结果,逐个处理,遇 \; 结束
 # find  / -user student  -type f  -exec cp {} /root/findfiles/  \;

#######################################################
• 根据名称查找,忽略大小写
– -iname
• 根据所属组
– -group
• 限制目录查找的深度(最大层数)
– -maxdepth
 根据文件修改时间,所有的时间都是过去时间
 -mtime  +10   #10天之前
 -mtime  -10   #最近10天之内
[root@server0 /]# find /var/log/ -mtime +90
######################################################
扇区大小 512 字节
硬盘的“艺术”之旅
• 识别硬盘 => 分区规划 => 格式化 => 挂载使用
一、识别硬盘
1.由系统自动完成
2.查看查看识别的硬盘
二、分区规划 
–  主分区、扩展分区、逻辑分区
– 1~4个主分区   或者  3个主分区+1个扩展分区(n个逻辑分区)
– 最大支持容量为 2.2TB 的磁盘
– 扩展分区不能格式化，不能存储数据，只是基于它创建逻辑分区
划分分区
[root@server0 ~]# fdisk  /dev/vdb
   n 创建新的分区----->回车----->回车---->回车----->在last结束时 +1G
   p 查看分区表
   n 创建新的分区----->回车----->回车---->回车----->在last结束时 +2G
   d 删除分区
   w 保存并退出
[root@server0 ~]# ls /dev/vdb[1-2]
三、格式化相当于装修，赋予空间文件系统（存放数据的规则）
[root@server0 ~]# mkfs.ext4  /dev/vdb1  #格式化ext4文件系统
[root@server0 ~]# blkid /dev/vdb1   #查看分区文件系统
[root@server0 ~]# mkfs.xfs /dev/vdb2 ###################################################
四、挂载访问
[root@server0 ~]# df  -h     #查看正在挂载的设备的使用情况
五、开机自动挂载
 配置文件 /etc/fstab 的记录格式
–  设备路径     挂载点           文件系统类型       参数     备份标记      检测顺序
[root@server0 ~]# vim /etc/fstab 
	/dev/vdb1   /mypart1  ext4  defaults  0 0
 	/dev/vdb2   /mypart2  xfs   defaults  0 0
[root@server0 ~]# mount -a
[root@server0 ~]# df -h
   检测/etc/fstab开机自动挂载配置文件,格式是否正确
   检测/etc/fstab中,书写完成,但当前没有挂载的设备,进行挂载

#################################################
总结：
 1.查看识别的硬盘--->lsblk
 2.划分分区--->fdisk
 3.刷新分区--->partprobe
 4.格式化---> mkfs.ext4  mkfs.xfs----》blkid查看文件系统
 5.挂载使用--->mount--》通过/etc/fstab实现开机自动挂载---》mount -a
 6.查看正在挂载设备的使用情况--->df -h
[root@server0 ~]# lsblk 
###################################################
LVM逻辑卷的管理
作用：1.空间可以变大  2.整合分散的空间
   将众多的物理卷（PV）组成卷组（VG），再从卷组中划分逻辑卷(LV)
一、创建逻辑卷 
1.创建卷组
 命令格式： vgcreate   卷组的名称     分区路径
[root@server0 ~]# vgcreate systemvg /dev/vdc[1-2]
[root@server0 ~]# vgs   #查看所有卷组信息
[root@server0 ~]# pvs   #查看所有物理卷信息
2.划分逻辑卷
 命令格式：lvcreate -L 大小   -n 逻辑卷的名称   卷组的名称 
[root@server0 ~]# lvcreate -L 16G -n mylv systemvg
[root@server0 ~]# lvs   #查看所有逻辑卷信息
3.逻辑卷的使用
[root@server0 ~]# mkfs.ext4 /dev/systemvg/mylv  #格式化
[root@server0 ~]# mkdir /lv        #创建挂载点
[root@server0 ~]# vim /etc/fstab   #修改配置文件
/dev/systemvg/mylv   /lv    ext4    defaults   0   0
[root@server0 ~]# mount -a
[root@server0 ~]# df -h | tail -1
/dev/mapper/systemvg-mylv   16G   45M   15G    1% /lv

######################################################
逻辑卷空间的扩大

一、卷组有足够的剩余空间
1.扩展逻辑卷的空间
[root@server0 ~]# lvcreate -L 16G -n mylv systemvg
2.扩展逻辑卷的文件系统
   ext4文件系统： resize2fs  resize2fs程序会重新定义ext2,ext3或者是ext4文件系统
   xfs文件系统：xfs_growfs
[root@server0 ~]# blkid /dev/systemvg/mylv  用于显示系统硬盘分区的情况
[root@server0 ~]# df -h | tail -1
[root@server0 ~]# resize2fs /dev/systemvg/mylv 
[root@server0 ~]# df -h | tail -1
二、卷组没有足够的剩余空间
1.扩大卷组的空间
[root@server0 ~]# vgextend systemvg /dev/vdc3 /dev/vdc5
2.扩展空间
[root@server0 ~]# lvextend -L 25G /dev/systemvg/mylv 
#####################################################
了解：逻辑卷可以变小
         ext4文件系统支持缩小
         xfs文件系统不支持缩小
###################################################
 卷组划分空间的单位PE  默认大小4M
• 创建卷组的时候设置PE大小
– vgcreate -s PE大小 卷组名 空闲分区...  #创建卷组修改PE的大小
– vgchange -s PE大小 卷组名     #卷组已存在修改PE的大小
• 创建逻辑卷的时候指定PE个数
– lvcreate -l PE个数 -n 逻辑卷名 卷组名####################################################
[root@server0 ~]# vgchange -s 1M systemvg   #修改PE的大小

[root@server0 ~]# vgdisplay systemvg    #查看卷组详细信息
  PE Size               1.00 MiB
[root@server0 ~]# lvcreate -l 89 -n lvtest03 systemvg
     先修改修改PE的大小 在 创建逻辑卷的指定PE个数
#####################################################
删除逻辑卷
1.首先删除逻辑卷，然后在删除卷组，最后删除物理卷
2.在删除卷组时，确认没有任何一个逻辑卷基于其创建
1.删除逻辑卷
[root@server0 ~]# lvremove /dev/systemvg/mylv 
Do you really want to remove active logical volume mylv? [y/n]: y
2.删除卷组
[root@server0 ~]# vgremove systemvg
  Volume group "systemvg" successfully removed
3.删除物理卷
[root@server0 ~]# pvremove /dev/vdc[1-3] /dev/vdc5
#######################################################
Shell脚本基础
 脚本：可以执行的一个文本文件，可以实现某种功能
[root@server0 ~]# /root/hello.sh    #绝对路径来运行
规范Shell脚本的一般组成
 • #! 环境声明（以下所有代码利用哪一个程序解释）
 • # 注释文本
 • 可执行代码
[root@server0 ~]# chmod +x /root/hello.sh  给与执行权限

######################################################
管道传递
– 将前一条命令的标准输出交给后一条命令处理
重定向输出
     > :  只收集正确输出
     2>：只收集错误输出
     &>：正确输出与错误输出都收集
     $[]     :代表运算  +   -   *  /    %（取余数运算）
     '  ':取消所有字符特殊意义

[root@server0 ~]# echo '*'
*
[root@server0 ~]# echo '* > ? []  {} % $'
* > ? []  {} % $

  $( ):将命令的输出，当作参数，参与其他命令执行
[root@server0 opt]# mkdir  $(date +%F)
     黑洞设备:/dev/null
环境变量:
   PATH :为执行命令时，提供搜寻路径（在搜寻命令程序文件位置）
######################################################
变量的赋值
– 变量名=变量值
变量名要求
– 等号两边不要有空格
– 变量名只能由字母/数字/下划线组成,区分大小写
– 变量名不能以数字开头,不要使用关键字和特殊字符
– 若指定的变量名已存在,相当于为此变量重新赋值
###################################################
环境变量:由系统定义完成，并且赋值完成，用户直接使用即可
USER=永远储存当前登陆的用户名
 
位置变量:由系统定义完成，并且赋值完成，用户直接使用即可
作用：在执行脚本时提供的命令行参数
– $1、$2、.. .. ${10}、${11}
#####################################################33
   read：产生交互，捕捉用户在键盘上的输入，并且赋值给一个变量

     -p：'屏幕提示信息'
预定义变量:由系统定义完成，并且赋值完成，用户直接使用即可

	$#  已加载的位置变量的个数,求和
	$*  所有位置变量的值
 	$?  程序退出后的状态值,0表示正常,其他值异常	

#####################################################
条件测试及选择判断
• 检查文件状态
	-e：文档存在为真
	-d：存在且为目录为真
	-f：存在且为文件为真

[root@server0 /]# [ -d /etc/passwd ]
[root@server0 /]# echo $?
0
• 比较整数大小( g代表大  l代表小  e代表等于)
	-gt:大于
	-ge:大于等于
	-eq:等于
	-ne:不等于
	-lt:小于
	-le:小于等于

• 字符串比对
     == ：字符串相等为真
     !=：字符串不相等为真
##########################################################
系统安全保护
SELinux安全机制
• Security-Enhanced Linux
– 美国NSA国家安全局主导开发,一套增强Linux系统安
全的强制访问控制体系
– 集成到Linux内核(2.6及以上)中运行
– RHEL7基于SELinux体系针对用户、进程、目录和文件
提供了预设的保护策略,以及管理工具

• SELinux的运行模式
– enforcing(强制)、permissive(宽松)
– disabled(彻底禁用)任何模式变成disabled都要重起才可以

• 切换运行模式
– 临时切换:setenforce  1|0    #本次开机临时切换状态
– 固定配置:/etc/selinux/config 文件
两台虚拟机修改SELinux状态：
[root@server0 ~]# getenforce       #查看当前SELinux的运行模式

[root@server0 ~]# setenforce 0     #修改当前运行模式
 ~]# vim /etc/selinux/config   #每次开机运行模式
SELINUX=permissive

#####################################################
• 影响指定用户的 bash 解释环境
– ~/.bashrc,每次开启 bash 终端时生效

• 影响所有用户的 bash 解释环境
– /etc/bashrc,每次开启 bash 终端时生效

####################################################
防火墙策略管理
搭建基本Web服务
1.安装软件包 Apache（httpd）   
[root@server0 ~]# yum -y install httpd
2.重起httpd服务
[root@server0 ~]# systemctl restart httpd  #重起httpd服务
[root@server0 ~]# systemctl enable httpd   #设置为开机自启动
3.本机访问测试
[root@server0 ~]# firefox 172.25.0.11    #本机访问本机
4.书写一个自己的页面文件
  默认网页文件存放路径：/var/www/html
  默认主页文件名称： index.html
[root@server0 ~]# vim /var/www/html/index.html
<marquee><font color=red><h1>NSD1807
  滚动                红色              字体变大
搭建基本FTP服务:文件传输
1.安装软件包vsftpd
[root@server0 ~]# yum -y install vsftpd

2.重起vsftpd服务
[root@server0 ~]# systemctl restart vsftpd
[root@server0 ~]# systemctl enable vsftpd

3.本机测试验证
[root@server0 ~]# firefox ftp://172.25.0.11

4.默认vsftpd共享路径 /var/ftp/

###################################################
防火墙策略管理：隔离
	硬件防火墙
	 软件防火墙： firewalld 
 管理工具:firewall-cmd（命令）、firewall-config（图形）
– public:仅允许访问本机的sshd dhcp ping等少数几个服务
– trusted:允许任何访问
– block:阻塞任何来访请求,明确拒绝
– drop:丢弃任何来访的数据包，直接丢弃
防火墙默认区域：public
防火墙进入区域的判断规则：匹配及停止
     1.查看访问请求中源IP地址，查询所有的区域中，哪个区域有该源IP地址的策略，则进入该区域
     2.进入默认区域即可
虚拟机server0：
# firewall-cmd --set-default-zone=public  #修改默认区域
# firewall-cmd --zone=public --list-all   #查看public区域规则
# firewall-cmd --zone=public --add-service=http #添加允许协议
# firewall-cmd --zone=public --list-all 
######################################################
互联网中常见协议：
           http:超文本传输协议     默认端口:80
           https：安全的超文本传输协议  默认端口:443
           ftp:文件传输协议         默认端口:21
           tftp:简单的文件传输协议  默认端口:69
           dns：域名解析协议   默认端口:53
           smtp：发邮件协议    默认端口:25
           pop3：收邮件协议    默认端口:110

           snmp：网络管理协议   默认端口:161
           telnet:远程管理协议  默认端口:23
#####################################################
互联网怎样找到另一台主机：通过IP地址
如何找到主机上相应的程序：端口
	端口：标识服务或程序，编号
        允许改变端口号，也允许一个服务或程序具备多个端口
 数据包：源IP地址、目标IP地址、数据、端口
##########################################################
Samba服务基础，配置SMB共享（Windows与Linux跨平台的共享）
 – 用途:为客户机提供共享使用的文件夹
– 协议:SMB(TCP 139)验证、CIFS(TCP 445)传输数据
• 所需软件包:samba
• 系统服务:smb
• Samba用户 —— 专用来访问共享文件夹的用户
– 但需要提前建立同名的系统用户
– 采用独立设置的密码与系统登陆密码不同

 pdbedit -x harry   #删除samba共享帐号harry

Samba服务端配置文件：/etc/samba/smb.conf	
[自定共享名]
path = 文件夹绝对路径
; public = no|yes //默认no
; browseable = yes|no //默认yes
; read only = yes|no //默认yes
; write list = 用户1 .. .. //默认无
; valid users = 用户1 .. .. //默认任何用户
; hosts allow = 客户机地址 .. ..
; hosts deny = 客户机地址 .. ..


一、搭建基本的samba共享服务
1.安装软件包samba
2.建立samba共享帐号，专用于验证samba共享服务用户名
[root@server0 ~]# useradd -s /sbin/nologin harry
[root@server0 ~]# pdbedit -a harry   #添加为samba共享帐号
[root@server0 ~]# pdbedit -L         #列出所有的samba共享帐号
3.发布目录 /common,共享名为 common
[root@server0 ~]# mkdir /common
[root@server0 ~]# echo haha > /common/1.txt
[root@server0 ~]# ls /common
[root@server0 ~]# vim /etc/samba/smb.conf  #按G(大写)到最后\
1)此服务器必须是 STAFF 工作组的一个成员
        workgroup = STAFF

[common]
  path = /common

4.重起smb服务
[root@server0 ~]# systemctl restart smb
[root@server0 ~]# systemctl enable smb
5.SELinux的 布尔值（功能的开关  on与off）
  – 需要加 -P 选项才能实现永久设置
# getsebool -a | grep samba          #查看SELinux布尔值
# setsebool  samba_export_all_ro on  #修改SELinux布尔值
# getsebool -a | grep samba
#######################################################
客户端：虚拟机Desktop0
1.所需软件包:samba-client访问服务端共享
2.显示服务端共享内容
[root@desktop0 ~]# smbclient -L //172.25.0.11 
3.访问共享
[root@desktop0 ~]# smbclient -U harry //172.25.0.11/common
Enter harry's password: 
Domain=[STAFF] OS=[Unix] Server=[Samba 4.1.1]
smb: \> ls
NT_STATUS_ACCESS_DENIED listing \*   #权限不足
smb: \> 
   smbclient -L 服务器地址 【密码为空（直接回车）】	
   smbclient -U 用户名 //服务器地址/共享名 【需要密码服务端虚拟机server0	
######################################################

更加科学方便的方式访问samba共享:挂载

1.安装软件包cifs-utils(支持cifs传输协议)
2.进行挂载
[root@desktop0 ~]# mkdir /mnt/nsd01
# mount -o user=harry,pass=123 //172.25.0.11/common /mnt/nsd01/
[root@desktop0 ~]# df  -h
[root@desktop0 ~]# ls  /mnt/nsd01
3.开机自动挂载/etc/fstab

  _netdev:网络设备
       在开机启动时，挂载带有_netdev参数的设备，需要首先将网络服务部署完成，配置好所有网络参数，在挂载本设备
[root@desktop0 ~]# vim /etc/fstab 
   //172.25.0.11/common  /mnt/nsd01   cifs 
    defaults,user=harry,pass=123,_netdev  0   0
[root@desktop0 ~]# mount -a     #验证是否书写正确
[root@desktop0 ~]# df -h

######################################################
读写的samba共享

虚拟机Server0：

1.发布目录 /devops,共享名为 devops
[root@server0 ~]# mkdir  /devops
[root@server0 ~]# echo 123  >  /devops/a.txt
[root@server0 ~]# ls  /devops/[root@server0 ~]# vim /etc/samba/smb.conf 
[devops]
  path = /devops
  write list = chihiro    #服务配置允许chihiro可以写
2.重起smb服务
[root@server0 ~]# systemctl restart smb
3.修改SELinux布尔值
[root@server0 ~]# getsebool -a | grep samba
[root@server0 ~]# setsebool samba_export_all_rw on
[root@server0 ~]# getsebool -a | grep samba
4.设置本机目录的基本的权限
[root@server0 ~]# setfacl -m u:chihiro:rwx /devops/
[root@server0 ~]# getfacl /devops/
 	客户端：虚拟机desktop0
1.书写配置文件完成开机自动挂载
[root@desktop0 ~]# vim /etc/fstab
  //172.25.0.11/devops /mnt/nsd02  cifs 
  defaults,user=chihiro,pass=123,_netdev 0 0 
[root@desktop0 ~]# mkdir /mnt/nsd02
[root@desktop0 ~]# mount -a
[root@desktop0 ~]# df -h
[root@desktop0 ~]# touch /mnt/nsd02/test.txt
#################################################
总结：客户端访问服务端影响的方面
             1.防火墙
          2.SELinux
             3.服务本身的策略
             4.服务端本地目录的权限
###################################################
multiuser机制(了解)
在客户端实现samba挂载时，采用权限较小用户验证，必要时可以切换成权限较大的用户身份

– multiuser,提供对客户端多个用户身份的区分支持
– sec=ntlmssp,提供NT局域网管理安全支持

客户端：虚拟机desktop0
[root@desktop0 ~]# vim /etc/fstab
//172.25.0.11/devops /mnt/nsd02  cifs defaults,user=kenji,pass=123,_netdev,multiuser,sec=ntlmssp 0 0

[root@desktop0 ~]# umount /mnt/nsd02
[root@desktop0 ~]# mount -a
[root@desktop0 ~]# su - student
[student@desktop0 ~]$ cifscreds add -u chihiro 172.25.0.11
Password: 

[student@desktop0 ~]$ exit

#######################################################
 配置NFS共享（Linux与Linux之间的共享）

• Network File System,网络文件系统
 – 用途:为客户机提供共享使用的文件夹
 – 协议:NFS(TCP/UDP 2049)、RPC(TCP/UDP 111)
• 所需软件包:nfs-utils
• 系统服务:nfs-server

虚拟机server0
1.安装软件nfs-utils
[root@server0 ~]# yum -y install nfs-utils
[root@server0 ~]# rpm -q nfs-utils

2.发布共享 /abc
[root@server0 ~]# mkdir /abc
[root@server0 ~]# echo 123 > /abc/123.txt
[root@server0 ~]# ls /abc/
[root@server0 ~]# vim /etc/exports
• 修改 /etc/exports
– 文件夹路径    客户机地址(权限) 
   /abc       *(ro)

3.重起nfs-server服务
[root@server0 ~]# systemctl restart nfs-server
[root@server0 ~]# systemctl enable nfs-server

客户端虚拟机desktop0

[root@desktop0 ~]# vim  /etc/fstab
172.25.0.11:/abc  /mnt/nfs   nfs   defaults,_netdev 0 0

[root@desktop0 ~]# mount -a
mount.nfs: mount point /mnt/nfs does not exist
[root@desktop0 ~]# mkdir /mnt/nfs
[root@desktop0 ~]# mount -a
[root@desktop0 ~]# df -h

#####################################################
配置IPv6地址
IPv4地址:32个二进制组成,以 点 分隔 4 部分,最终用4个十进制表示
IPv6地址:128个二进制组成,以 冒号 分隔 8 部分,每部分由 4个16进制数表示
– 每段内连续的前置 0 可省略、连续的多个 : 可简化为 ::
– 例如: 2003:ac18:0000:0000:0000:0000:0000:0305
      2003:ac18::305/64

########################################################
iSCSI网络磁盘
• Internet SCSI,网际SCSI接口:默认端口 3260
– 一种基于C/S架构的虚拟磁盘技术
– 服务器提供磁盘空间,客户机连接并当成本地磁盘使用
    大冰箱---->简易包装(纸)---->坚固包装(木)--->运输
• backstore,后端存储（大冰箱-共享的设备）
– 对应到服务端提供实际存储空间的设备,需要起一个管理名称
• target,磁盘组（坚固包装(木））
– 是客户端的访问目标,作为一个框架,由多个lun组成
• lun,逻辑单元（关联-   将大冰箱放入--》坚固包装）
– 每一个lun需要关联到某一个后端存储设备,在客户端
会视为一块虚拟硬盘

• 基本交互操作
– /backstore/block create 后端存储名 实际设备路径
– /iscsi create 磁盘组的IQN名称
– /iscsi/磁盘组名/tpg1/luns create 后端存储路径
– /iscsi/磁盘组名/tpg1/acls create 客户机IQN标识
– /iscsi/磁盘组名/tpg1/portals create IP地址 端口号

– iqn.yyyy-mm.倒序域名:自定义标识

– 作用：用来识别 target 磁盘组, 也用来识别客户机身份
• 名称示例
– iqn.2016-02.com.example:server0
– iqn.2016-02.com.example:desktop0

一、进行分区
利用fdisk对/dev/vdb进行分区，将所有空间全部分配给第一个主分区10G
[root@server0 ~]# fdisk  /dev/vdb  
[root@server0 ~]# lsblk 
二、虚拟机server0服务端，搭建网络共享磁盘

1.安装软件targetcli
[root@server0 /]# yum -y install targetcli

2.运行targetcli进行配置
[root@server0 /]# targetcli
     – A:建立 后端存储（买冰箱--->简易的包装）
/> backstores/block  create  name=nsd   dev=/dev/vdb1
     – B:建立  target,磁盘组   木箱子（坚硬的包装）
/> iscsi/ create   iqn.2018-08.example.com:server0
     – C:进行  lun 关联 (将后端存储放入--->磁盘组)
/> iscsi/iqn.2018-08.example.com:server0/tpg1/luns     
  create /backstores/block/nsd 
     – D:设置ACL 访问控制:iqn进行标识客户端（设置客户端声称 的名字）
/> iscsi/iqn.2018-08.example.com:server0/tpg1/acls 
   create iqn.2018-08.example.com:desktop0
     – E:设置本机允许客户端访问的IP地址，端口号
/> iscsi/iqn.2018-08.example.com:server0/tpg1/portals 
   create 172.25.0.11
/> ls             
/> exit
三、重起服务端target服务
[root@server0 /]# systemctl restart target
[root@server0 /]# systemctl enable target
#####################################################
客户端：
虚拟机desktop0
1.安装软件包iscsi-initiator-utils
[root@desktop0 /]# rpm -q iscsi-initiator-utils
iscsi-initiator-utils-6.2.0.873-21.el7.x86_64
2.修改配置文件 ，指定 客户端声称 的名字
[root@desktop0 /]# vim /etc/iscsi/initiatorname.iscsi
InitiatorName=iqn.2018-08.example.com:desktop0

3.重起iscsid服务，刷新客户端声称 的名字
[root@desktop0 ~]# systemctl restart iscsid
Warning: Unit file of iscsid.service changed on disk, 'systemctl daemon-reload' recommended.
[root@desktop0 ~]# systemctl daemon-reload
[root@desktop0 ~]# systemctl restart iscsid

4.寻找服务端共享存储，借鉴 man 帮助信息
[root@desktop0 /]# man iscsiadm    # /example 按n进行跳转匹配
[root@desktop0 /]# iscsiadm --mode discoverydb --type sendtargets --portal 172.25.0.11 --discover
172.25.0.11:3260,1 iqn.2018-08.example.com:server0

5.重起iscsi服务，加载识别共享存储
[root@desktop0 /]# lsblk 
[root@desktop0 /]# systemctl restart iscsi
[root@desktop0 /]# systemctl enable iscsi
[root@desktop0 /]# lsblk   #能够发现sda磁盘
####################################################
数据库管理：存放数据的仓库
 数据库 中会有很多的  库 ，在每一个库中会有很多的  表格
一、部署mariadb数据库服务器：默认的端口 3306
– mariadb-server:提供服务端有关的系统程序
[root@server0 /]# yum -y install mariadb-server
[root@server0 /]# systemctl  restart  mariadb
[root@server0 /]# systemctl  enable  mariadb
二、数据库基本操作
1.进入数据库
[root@server0 /]# mysql               #进入数据库
MariaDB [(none)]> show  databases;     #查看都有那些库
MariaDB [(none)]> create  database  nsd1807;  #创建nsd1807库
MariaDB [(none)]> show  databases;
MariaDB [(none)]> drop  database  nsd1807;   #删除nsd1807库
二、为数据库管理员设置密码
数据库管理员：用户名root，对整个数据库最高权限，mysql库中user表
系统管理员：用户名root，对整个Linux系统最高权限，/etc/passwd
• 为数据库账号修改密码
– mysqladmin [-u用户名] [-p[旧密码]] password '新密码'
[root@server0 ~]# mysqladmin  -u  root  password  '123'
[root@server0 /]# mysql  -u  root  -p
Enter password: 
[root@server0 /]# mysql  -u  root  -p123   #非交互式进入数据库
三、数据库的主配置文件
• 禁止监听,只服务于本机
[root@server0 ~]# vim /etc/my.cnf
[mysqld]
skip-networking  //跳过网络监听
.. ..
[root@server0 ~]# systemctl restart mariadb
四、数据库的 数据恢复
• 导入/恢复到数据库
– mysql  [-u用户名]  [-p[密码]] 数据库名   <  备份文件.sql
# wget http://classroom.example.com/pub/materials/users.sql
# ls
# mysql -u root -p123  nsd < users.sql
将数据users.sql以root身份，恢复到nsd库中
五、对于表格操作
      表字段    表记录
      操作： 增(insert)     删 (delete)       改(update)      查(select)
[root@server0 /]# mysql -u root -p123
	> show databases;       #列出所有的库
	> use nsd;              #进入nsd库
	> show tables;          #列出所有表格
	> select 表字段 from 表名；
	> select * from base;      #查看base表所有内容
	> select * from location;  #查看location表所有内容
	> select name,password from base;  #查看某个字段内容 
	> select city from location;       #查看某个字段内容

六，有条件的查询
   > select 表字段 from 表名  where 表字段='值'；
   请查询base表密码为456，用户名？
MariaDB [mysql]> use nsd;
MariaDB [nsd]> select * from base where password='456';
MariaDB [nsd]> use mysql;
MariaDB [mysql]> select * from nsd.base;
MariaDB [mysql]> use nsd;
MariaDB [nsd]> select * from base where name='tom';
MariaDB [nsd]> select * from location where id='3';
MariaDB [nsd]> select * from location where city='beijing'
MariaDB [mysql]> use  mysql；
MariaDB [mysql]> show tables;
MariaDB [mysql]> desc user;    #查看表结构
MariaDB [mysql]> select user,host,password from user;

七、数据库的授权
– 除了root用户,此nsd数据库只能被用户lisi查询,此用户的密码为123
 –  grant 权限列表  on  数据库名.表名   to   用户名@客户机地址
    identified by '密码';


    grant  select on  nsd.*  to lisi@localhost 
    identified by '123'; 
 
   当lisi从本地localhost进行登陆输入密码123，将会获得nsd库中所有
   表的查询权限

[root@server0 /]# mysql -u root -p123

MariaDB [(none)]> grant select on nsd.* to lisi@localhost 
   identified by '123';

MariaDB [(none)]> select user,password from mysql.user;


#######################################################
案例5:使用数据库查询
2. 在系统 server0 上使用数据库 nsd,并使用相
应的 SQL 查询以回答下列问题:
1)密码是 solicitous 的人的名字?
[root@server0 /]# mysql -u root -p123
>  use nsd;
>  select * from base where password='solicitous';

>  select * from nsd.base where password='solicitous';


2)有多少人的姓名是 Barbara 同时居住在 Sunnyvale?

MariaDB [nsd]> select * from base,location            
  where base.name='Barbara'  and                        
  location.city='Sunnyvale'  and  base.id=location.id;

MariaDB [nsd]> select count(*) from base,location        
   where base.name='Barbara'  and                        
   location.city='Sunnyvale'  and  base.id=location.id;

MariaDB [nsd]> insert base values ('6','Barbara','789');
MariaDB [nsd]> select * from base;

MariaDB [nsd]> insert location values ('6','Sunnyvale');
MariaDB [nsd]> select * from location;

1. 禁止空密码root用户访问 mariadb 数据库
[root@server0 /]# mysql -u root  -p123
> select user,host,password from mysql.user;

> select user,host,password from mysql.user 
  where password='';

> delete from mysql.user  where password='';  #删除记录
> select user,host,password from mysql.user;

> flush privileges;  #刷新user表记录

测试登陆不成功
[root@server0 /]# mysql -u root -h server0.example.com

#######################################################
Web通信基本概念
• 基于 B/S (Browser/Server)架构的网页服务
– 服务端提供网页
– 浏览器下载并显示网页
• Hyper Text Markup Language(html),超文本标记语言
• Hyper Text Transfer Protocol(http),超文本传输协议 默认端口80
RHEL7中的Web服务
• 软件包:httpd
• 系统服务:httpd
• 提供的默认配置
– Listen:监听地址:端口(80)
– ServerName:本站点注册的DNS名称(空缺)
– DocumentRoot:网页根目录(/var/www/html)
– DirectoryIndex:起始页/首页文件名(index.html)
虚拟机Server0
1.安装软件httpd
2.重起httpd服务
[root@server0 ~]# systemctl restart httpd
[root@server0 ~]# systemctl enable httpd
ln -s '/usr/lib/systemd/system/httpd.service' '/etc/systemd/system/multi-user.target.wants/httpd.service'
[root@server0 ~]# 

3.测试：访问测试页面
[root@server0 ~]# firefox 172.25.0.11

4. 书写一个自己的页面
# echo '<h1>NSD1807 Web01'  >  /var/www/html/index.html 
# cat  /var/www/html/index.html

######################################################
– ServerName:本站点注册的DNS名称(空缺)
   
  DNS服务器：域名解析服务  将域名解析为IP地址
            classroom.example.com
         三个域名： server0.example.com
              www0.example.com
              webapp0.example.com

虚拟机Server0：
1.修改主配置文件
[root@server0 ~]# vim /etc/httpd/conf/httpd.conf
 补充：vim 显示行号   末行模式：set  nu
 95行  ServerName server0.example.com:80   #将开头的#去掉
2.重起httpd服务
[root@server0 ~]# systemctl restart httpd
在虚拟机desktop0，测试访问
[root@desktop0 ~]# firefox server0.example.com

#####################################################
DocumentRoot:网页文件根目录(/var/www/html)

  119行  DocumentRoot  "/var/www/myweb"   #修改存放网页文件路径

2.重起httpd服务
[root@server0 ~]# systemctl restart httpd

在虚拟机desktop0，测试访问
[root@desktop0 ~]# firefox server0.example.com

######################################################
 网络路径与实际路径区别

客户端： firefox http://server0.example.com

服务端： 
   httpd--》/etc/httpd/conf/httpd.conf--》DocumentRoot
虚拟机Server0：

# mkdir  -p /var/www/myweb/abc/test

# echo '<h1>wo shi abc/test' > /var/www/myweb/abc/test/index.html

虚拟机desktop0，测试访问
[root@desktop0 ~]# firefox server0.example.com/abc/test

######################################################
虚拟Web主机
– 由同一台服务器提供多个不同的Web站点

• 构建/区分方式
– 基于域名的虚拟主机
– 基于端口的虚拟主机
– 基于IP地址的虚拟主机

#####################################################
– 基于域名的虚拟主机

• 为每个虚拟站点添加配置，容器式配置格式
	<VirtualHost IP地址:端口>
	  ServerName 此站点的DNS名称
	  DocumentRoot 此站点的网页根目录
	</VirtualHost>

• 配置文件路径
  – /etc/httpd/conf/httpd.conf
  – /etc/httpd/conf.d/*.conf   （调用配置文件）

####################################################
配置虚拟Web主机
虚拟机server0:
[root@server0 ~]# vim  /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName www0.example.com
  DocumentRoot /var/www/qq
</VirtualHost>

<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/baidu
</VirtualHost>

[root@server0 ~]# mkdir  /var/www/qq  /var/www/baidu
[root@server0 ~]# echo '<h1>企鹅' > /var/www/qq/index.html
[root@server0 ~]# echo '<h1>百度' > /var/www/baidu/index.html
[root@server0 ~]# systemctl restart httpd

[root@server0 ~]# killall httpd  #杀死所有httpd程序


一旦使用了虚拟Web主机功能，所有的Web站点都必须用虚拟Web主机来实现
 由上到下匹配
[root@server0 ~]# vim /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName www0.example.com
  DocumentRoot /var/www/qq
</VirtualHost>
<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/baidu
</VirtualHost>
<VirtualHost *:80>
  ServerName server0.example.com
  DocumentRoot /var/www/myweb
</VirtualHost>
[root@server0 ~]#  systemctl restart httpd

#######################################################
httpd的访问控制

• 使用 <Directory> 配置区段
– 每个文件夹自动继承其父目录的ACL访问权限
– 除非针对子目录有明确设置


<Directory 目录的绝对路径>
.. ..
  Require all denied|granted
  Require ip IP或网段地址 .. ..
</Directory>

###########################################
在 Web 网站 http://server0.example.com 的
DocumentRoot 目录下创建一个名为 private 的子目录
要求如下:

3)从 server0 上,任何人都可以浏览 private 的内容,
但是从其他系统不能访问这个目录的内容

虚拟机server0：
# mkdir /var/www/myweb/private
# echo '<h1>wo shi private' > /var/www/myweb/private/index.html

书写新的配置文件，针对/var/www/myweb/private设置访问控制
[root@server0 ~]# vim /etc/httpd/conf/httpd.conf 
[root@server0 ~]# vim /etc/httpd/conf.d/nsd02.conf
 <Directory /var/www/myweb/private>
    Require ip 172.25.0.11   #仅允许本机172.25.0.11访问
 </Directory>
[root@server0 ~]#  systemctl restart httpd

虚拟机desktop0：访问测试
# firefox server0.example.com/private
Forbidden
You don't have permission to access /private/ on this server.

####################################################
案例4:使用自定Web根目录
调整 Web 站点 http://server0.example.com 的网页目录,
要求如下:
1)新建目录 /webroot,作为此站点新的网页目录
4)确保站点 http://server0.example.com 仍然可访问

虚拟机Server0
1.新建目录 /webroot,修改配置文件
# mkdir /webroot
# echo '<h1>wo shi webroot' > /webroot/index.html

# vim /etc/httpd/conf.d/nsd01.conf   #修改内容
 <VirtualHost *:80>
   ServerName  server0.example.com
   DocumentRoot  /webroot           #修改网页文件根目录
 </VirtualHost>

2.修改配置文件，实现访问控制 
# vim /etc/httpd/conf.d/nsd02.conf   #追加写入
 <Directory /webroot>
    Require  all  granted            #允许所有人访问
 </Directory>

[root@server0 ~]# systemctl restart httpd

3.SELinux安全上下文值（标签，标识文件或目录）
[root@server0 ~]# ls -Zd /var/www/      #查看目录的上下文值
[root@server0 ~]# ls -Zd /webroot/      #查看目录的上下文值

 ——以/var/www/为模版，修改/webroot的上下文值   -R：递归修改
[root@server0 ~]# chcon -R --reference=/var/www/  /webroot/

[root@server0 ~]# ls -Zd /webroot/      #查看目录的上下文值

虚拟机desktop：
[root@desktop0 ~]# firefox server0.example.com

#######################################################
部署动态网站

1.部署Python页面，放到webapp0.example.com的Documentroot目录
# cat /etc/httpd/conf.d/nsd01.conf

# cd /var/www/baidu/
# wget http://classroom.example.com/pub/materials/
webinfo.wsgi

# ls

2.方便客户端访问,网页跳转（网页访问路径别名）
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf
  Alias 客户端网络路径   服务器实际原始路径

<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/baidu
  Alias   /    /var/www/baidu/webinfo.wsgi
   #客户端访问到 网页文件根目录时，将webinfo.wsgi页面呈现
</VirtualHost>

[root@server0 /]# systemctl restart httpd
 
客户端：访问测试查看Python页面
[root@desktop0 ~]# firefox  webapp0.example.com

3.翻译Python的Web页面内容
[root@server0 /]# yum -y install mod_wsgi  #解释Python程序
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/baidu
  WsgiScriptAlias  /    /var/www/baidu/webinfo.wsgi

</VirtualHost>

[root@server0 /]# systemctl restart httpd

网页内容为：
  UINX时间戳：自1970-1-1 0时0分0秒算起，到现在时间所经历的秒数
客户端：访问测试查看Python页面
[root@desktop0 ~]# firefox  webapp0.example.com

4.此虚拟主机侦听在端口8909
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf 
Listen 8909
<VirtualHost *:8909>
  ServerName  webapp0.example.com
  DocumentRoot  /var/www/baidu
  WsgiScriptAlias  /    /var/www/baidu/webinfo.wsgi
</VirtualHost>

5.SELinux非默认端口的开放

 # semanage port -l | grep http
 # semanage port  -a  -t  http_port_t  -p  tcp 8909
     -a:添加    -t：类型     -p：协议
 # semanage port -l | grep http
 # systemctl restart httpd

[root@desktop0 ~]# firefox webapp0.example.com:8909
端口优先级高于域名

########################################################

Web通信基本概念

• 基于 B/S (Browser/Server)架构的网页服务
– 服务端提供网页
– 浏览器下载并显示网页

########################################################
搭建虚拟Web主机：

 利用基于域名的虚拟Web主机，搭建网站
         利用server0.example.com ------》Web1
         利用www0.example.com --------》Web2
1.环境的准备，设置防火墙默认区域为trusted（允许所有访问） 
2.安装httpd软件，建立调用配置文件
# yum -y install httpd
# mkdir /var/www/nsd
# echo '<h1>Web1' > /var/www/html/index.html
# echo '<h1>Web2' > /var/www/nsd/index.html
[root@server0 ~]# vim /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName server0.example.com
  DocumentRoot /var/www/html
</VirtualHost>
<VirtualHost *:80>
  ServerName www0.example.com
  DocumentRoot /var/www/nsd
</VirtualHost>
[root@server0 ~]# systemctl restart httpd

######################################################
安全的Web服务器，使用的协议https 默认端口 443

• Public Key Infrastructure,公钥基础设施
– 公钥:主要用来加密数据
– 私钥:主要用来解密数据(与相应的公钥匹配)
– 数字证书:证明拥有者的合法性/权威性(单位名称、
有效期、公钥、颁发机构及签名、......)
– Certificate Authority,数字证书授权中心:负责证书
的申请/审核/颁发/鉴定/撤销等管理工作

构建安全Web服务器
1.安装支持安全功能的软件
[root@server0 ~]# yum -y install mod_ssl
[root@server0 ~]# ls /etc/httpd/conf.d/ssl.conf

2.部署网站证书（营业执照）
# cd /etc/pki/tls/certs/
# wget http://classroom.example.com/pub/tls/certs/server0.crt

# ls  /etc/pki/tls/certs/

3.部署根证书（公安局信息）
# cd  /etc/pki/tls/certs/
# wget http://classroom.example.com/pub/example-ca.crt

# ls  /etc/pki/tls/certs/

4.部署私钥（用于解密数据）
# cd  /etc/pki/tls/private/
# wget http://classroom.example.com/pub/tls/private/server0.key

# ls 

5.修改配置文件指定证书位置等
[root@server0 /]# vim /etc/httpd/conf.d/ssl.conf 
 vim末行模式   :set  nu 显示行号

 59行  DocumentRoot  "网页存放路径"               #将注释去掉，修改路径
 60行  ServerName  www0.example.com:443  #将注释去掉，修改域名

--指定网站证书位置
100 SSLCertificateFile /etc/pki/tls/certs/server0.crt

--指定私钥匙位置
107 SSLCertificateKeyFile /etc/pki/tls/private/server0.key

--指定根证书位置
122 SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt

6.重起httpd服务
[root@server0 /]# systemctl restart httpd

客户端虚拟机Desktop0验证：
[root@desktop0 ~]# firefox https://www0.example.com
   "我已充分了解可能的风险" ------》"确认安全例外"

#######################################################
基础邮件服务
• 电子邮件服务器的基本功能
– 为用户提供电子邮箱存储空间(用户名@邮件域名)
– 处理用户发出的邮件 —— 传递给收件服务器
– 处理用户收到的邮件 —— 投递到邮箱

    SMTP:用户发邮件协议     默认端口：25
    pop3:用户收邮件协议     默认端口：110

   classroom.example.com:DNS服务器
                                      域名：server0.example.com

    yg@server0.example.com    xln@server0.example.com

#####################################################
构建邮件服务器虚拟机Server0
1.安装软件postfix
[root@server0 /]# yum -y install postfix
[root@server0 /]# rpm -q postfix
2.修改配置文件
[root@server0 /]# vim /etc/postfix/main.cf 
 vim末行模式   ：set  nu    #开启行号

 99行     myorigin = server0.example.com   #默认补全的域名后缀
 116行  inet_interfaces = all     #本机所有网络接口都开放邮件功能
 164行  mydestination = server0.example.com  #判断为本域邮件

3.重起服务
[root@server0 /]# systemctl restart postfix

本机验证：
1.创建测试用户
[root@server0 /]# useradd yg
[root@server0 /]# useradd xln

• mail 发信操作
– mail -s '邮件标题'     -r  发件人       收件人

• mail 收信操作
– mail   [-u 用户名]

[root@server0 /]# mail -s '葵花宝典'   -r    yg   xln
AAAAAAAA
已练成
wehowgh
.            #只输入一个点，代表结束
EOT
[root@server0 /]# mail  -u  xln
Heirloom Mail version 12.5 7/5/10.  Type ? for help.
"/var/mail/xln": 1 message 1 new
>N  1 yg@server0.example.c  Mon Aug 20 14:22  20/614   
&  1       #输入邮件的编号，然后回车

#######################################################         

# echo haha | mail -s 'test02' -r yg  xln

# mail -u xln

####################################################
parted分区工具

    MBR 分区模式 : 4个主分区     容量2T 

    GPT 分区模式 : 128个主分区     容量18EB

            1EB=1000PB
            1PB=1000TB

[root@server0 /]# lsblk 
vdb    253:16   0  10G  0 disk 

[root@server0 ~]# parted /dev/vdb
(parted) mktable  gpt       #指定分区模式
(parted) print              #输出所有分区信息
(parted) mkpart             #创建新的分区
 分区名称？  []? nsd             #分区名称为nsd
文件系统类型？  [ext2]? ext4     #文件系统不起实际作用
 起始点？ 0           
 结束点？ 2G          
 忽略/Ignore/放弃/Cancel? Ignore    #忽略
(parted) unit  GB                 #使用GB作为显示单位
(parted) mkpart 
 分区名称？  []? nsd          
文件系统类型？  [ext2]? ext4 
起始点？ 2G                  
结束点？ 4G                  
(parted) print   
(parted) quit                        


###################################################
 交换空间

什么是交换空间
• 相当于虚拟内存,
– 当物理内存不够用时,使用磁盘空间来模拟内存
– 在一定程度上缓解内存不足的问题
– 交换分区:以空闲分区充当的交换空间

1.格式化交换文件系统
[root@server0 ~]# mkswap /dev/vdb1    #格式化交换文件系统
[root@server0 ~]# blkid /dev/vdb1     #查看文件系统类型
[root@server0 ~]# mkswap /dev/vdb2   
2.启用交换分区
[root@server0 ~]# swapon /dev/vdb1    #启用交换分区
[root@server0 ~]# swapon /dev/vdb2
[root@server0 ~]# swapon  -s          #查看交换空间信息
3.停用交换分区
[root@server0 ~]# swapoff /dev/vdb1 
[root@server0 ~]# swapoff /dev/vdb2
[root@server0 ~]# swapon  -s
4.开机自动启用交换分区
[root@server0 ~]# vim /etc/fstab 

/dev/vdb1  swap  swap defaults  0 0
/dev/vdb2  swap  swap defaults  0 0

[root@server0 ~]# swapoff /dev/vdb1
[root@server0 ~]# swapoff /dev/vdb2
[root@server0 ~]# swapon -s
[root@server0 ~]# swapon -a    #专用于检测swap分区开机自动启动
[root@server0 ~]# swapon -s

#######################################################
配置聚合连接（链路聚合  网卡绑定 ）

备份网卡设备:– 作用:热备份(activebackup)连接冗余

                         eth1     eth2  

                                           虚拟网卡：team0 192.168.1.1
制作链路聚合
1.建立虚拟网卡team0,   参考 # man teamd.conf
# nmcli connection add type team       
  con-name  team0  ifname  team0  autoconnect yes          
  config  '{"runner": {"name": "activebackup"}}'
解析：nmcli connection 添加   类型  为team
         配置文件名为 team0  网卡名为  team0  每次开机自动启用
         链路聚合的工作模式为   热备份
# ifconfig 
如果有敲错，一定要删除
# nmcli connection delete team0   #删除配置

2. 加入成员
[root@server0 ~]# nmcli connection add type team-slave 
con-name team0-1 ifname eth1 master team0

[root@server0 ~]# nmcli connection add type team-slave 
con-name team0-2 ifname eth2 master team0
解析：nmcli connection 添加   类型为  team的成员
          配置文件名  team0-1  网卡为 eth1  主设备为  team0

如果敲错，一定要删除配置
[root@server0 ~]# nmcli connection delete team0-1
[root@server0 ~]# nmcli connection delete team0-2
3.配置IP地址
[root@server0 ~]# nmcli connection modify team0        
   ipv4.method manual ipv4.addresses 192.168.1.1/24     
   connection.autoconnect yes

4.激活
[root@server0 ~]# nmcli connection up team0
[root@server0 ~]# nmcli connection up team0-1
[root@server0 ~]# nmcli connection up team0-2
[root@server0 ~]# teamdctl team0 state  #专业查看team0的命令
[root@server0 ~]# ifconfig eth1 down    #禁用网卡eth1
[root@server0 ~]# teamdctl team0 state

#####################################################
防火墙
永久配置(permanent)
# systemctl restart httpd
# firewall-cmd --set-default-zone=public  #修改默认区域
# firewall-cmd --zone=public --list-all   #查看public区域规则
# firewall-cmd --zone=public --add-service=http  #添加协议
# firewall-cmd --zone=public --list-all   #查看public区域规则
客户端desktop0验证：
# firefox  172.25.0.11

实现永久
# firewall-cmd --reload    #重新加载防火墙所有策略
# firewall-cmd --zone=public --list-all   #查看public区域规则

# firewall-cmd --permanent --zone=public --add-service=http
# firewall-cmd --zone=public --list-all

# firewall-cmd --reload 
# firewall-cmd --zone=public --list-all


端口转发：
   客户端虚拟机desktop0访问 172.25.0.11：5423
   防火墙进行端口转发将5423变成80
   172.25.0.11：80

虚拟机server0:
[root@server0 ~]# firewall-cmd --permanent --zone=public  
  --add-forward-port=port=5423:proto=tcp:toport=80

[root@server0 ~]# firewall-cmd --zone=public --list-all 

[root@server0 ~]# firewall-cmd --reload

[root@server0 ~]# firewall-cmd --zone=public --list-all

必须利用客户端desktop0测试：
[root@desktop0 ~]# firefox 172.25.0.11:5423

######################################################



































































































































































































































































































































  
















































































































































































































































  
































































































